name: Deployment pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    
  workflow_dispatch:

jobs:
  simple_deployment_pipeline:
      runs-on: ubuntu-18.04
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
             node-version: '12.x'
        - name: npm install
          working-directory: './full-stack-open-pokedex'
          run: npm install
        - name: lint
          working-directory: './full-stack-open-pokedex'
          run: npm run eslint
        - name: build
          working-directory: './full-stack-open-pokedex'
          run: npm run build
        - name: npm test
          working-directory: './full-stack-open-pokedex'
          run: npm run test
        - name: e2e tests    
          uses: cypress-io/github-action@v2
          with:
            working-directory: './full-stack-open-pokedex'
            command: npm run test:e2e
            start: npm run start
            wait-on: http://localhost:5000
        - name: heroku deploy
          if: ${{ github.event_name == 'push' }}
          uses: akhileshns/heroku-deploy@v3.8.9 # This is the action
          with:
            appdir: "full-stack-open-pokedex"
            heroku_api_key: ${{secrets.POKEDEX_API_KEY}}
            heroku_app_name: "pokedex-samu" #Must be unique in Heroku
            heroku_email: "samu.rotko@gmail.com"
            healthcheck: "https://pokedex-samu.herokuapp.com/health"
            checkstring: "ok"
            rollbackonhealthcheckfailed: true
        - uses: actions/checkout@v2
        - name: Bump version and push tag
          if: ${{ github.event_name == 'push' }} && {{ $COMMIT_MESSAGES.env.
          uses: anothrNick/github-tag-action@1.33.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
            DEFAULT_BUMP: patch
  a_test_job:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: gihub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message).contains(#skip) }}
        run: echo "$COMMIT_MESSAGES"
